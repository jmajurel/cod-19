{"ast":null,"code":"import _slicedToArray from \"/home/jfmajurel/Documents/cod-19/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/jfmajurel/Documents/cod-19/src/Containers/Screening.js\";\nimport React, { useState } from \"react\";\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\nimport FirstStepScreening from \"../Components/FirstStepScreening\";\nimport SecondStepScreening from \"../Components/SecondStepScreening\";\nimport PotentialSickCase from \"../Components/PotentialSickCase\";\nimport AllGood from \"../Components/AllGood\";\n\nconst Screening = () => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        symptopms = _useState2[0],\n        setSymptopms = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        info = _useState4[0],\n        setInfo = _useState4[1];\n\n  let history = useHistory();\n\n  let _useRouteMatch = useRouteMatch(),\n      path = _useRouteMatch.path;\n\n  function handleSubmit(newSymptopms) {\n    setSymptopms(newSymptopms);\n    history.push(\"\".concat(path, \"/secondStep\"));\n  }\n\n  function handleStepTwo(info) {\n    setInfo(info);\n    symptopms.length > 0 ? history.push(\"\".concat(path, \"/potential\")) : history.push(\"\".concat(path, \"/allGood\"));\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"\".concat(path),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(FirstStepScreening, {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"\".concat(path, \"/secondStep\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(SecondStepScreening, {\n    onSubmit: handleStepTwo,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"\".concat(path, \"/potential\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(PotentialSickCase, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  })), React.createElement(Route, {\n    path: \"\".concat(path, \"/allGood\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(AllGood, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }))));\n};\n\nexport default Screening;","map":{"version":3,"sources":["/home/jfmajurel/Documents/cod-19/src/Containers/Screening.js"],"names":["React","useState","Route","Switch","useHistory","useRouteMatch","FirstStepScreening","SecondStepScreening","PotentialSickCase","AllGood","Screening","symptopms","setSymptopms","info","setInfo","history","path","handleSubmit","newSymptopms","push","handleStepTwo","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,UAAxB,EAAoCC,aAApC,QAAyD,kBAAzD;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AAEA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA,oBACYT,QAAQ,CAAC,EAAD,CADpB;AAAA;AAAA,QACfU,SADe;AAAA,QACJC,YADI;;AAAA,qBAEEX,QAAQ,CAAC,EAAD,CAFV;AAAA;AAAA,QAEfY,IAFe;AAAA,QAETC,OAFS;;AAGtB,MAAIC,OAAO,GAAGX,UAAU,EAAxB;;AAHsB,uBAIPC,aAAa,EAJN;AAAA,MAIhBW,IAJgB,kBAIhBA,IAJgB;;AAKtB,WAASC,YAAT,CAAsBC,YAAtB,EAAoC;AAClCN,IAAAA,YAAY,CAACM,YAAD,CAAZ;AACAH,IAAAA,OAAO,CAACI,IAAR,WAAgBH,IAAhB;AACD;;AACD,WAASI,aAAT,CAAuBP,IAAvB,EAA6B;AAC3BC,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAF,IAAAA,SAAS,CAACU,MAAV,GAAmB,CAAnB,GACIN,OAAO,CAACI,IAAR,WAAgBH,IAAhB,gBADJ,GAEID,OAAO,CAACI,IAAR,WAAgBH,IAAhB,cAFJ;AAGD;;AACD,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,YAAKA,IAAL,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,kBAAD;AAAoB,IAAA,QAAQ,EAAEC,YAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAKE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKD,IAAL,gBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAqB,IAAA,QAAQ,EAAEI,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CALF,EASE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKJ,IAAL,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATF,EAaE,oBAAC,KAAD;AAAO,IAAA,IAAI,YAAKA,IAAL,aAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAbF,CADF,CADF;AAqBD,CApCD;;AAsCA,eAAeN,SAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Route, Switch, useHistory, useRouteMatch } from \"react-router-dom\";\r\nimport FirstStepScreening from \"../Components/FirstStepScreening\";\r\nimport SecondStepScreening from \"../Components/SecondStepScreening\";\r\nimport PotentialSickCase from \"../Components/PotentialSickCase\";\r\n\r\nimport AllGood from \"../Components/AllGood\";\r\n\r\nconst Screening = () => {\r\n  const [symptopms, setSymptopms] = useState([]);\r\n  const [info, setInfo] = useState({});\r\n  let history = useHistory();\r\n  let { path } = useRouteMatch();\r\n  function handleSubmit(newSymptopms) {\r\n    setSymptopms(newSymptopms);\r\n    history.push(`${path}/secondStep`);\r\n  }\r\n  function handleStepTwo(info) {\r\n    setInfo(info);\r\n    symptopms.length > 0\r\n      ? history.push(`${path}/potential`)\r\n      : history.push(`${path}/allGood`);\r\n  }\r\n  return (\r\n    <div>\r\n      <Switch>\r\n        <Route exact path={`${path}`}>\r\n          <FirstStepScreening onSubmit={handleSubmit} />\r\n        </Route>\r\n\r\n        <Route path={`${path}/secondStep`}>\r\n          <SecondStepScreening onSubmit={handleStepTwo} />\r\n        </Route>\r\n\r\n        <Route path={`${path}/potential`}>\r\n          <PotentialSickCase />\r\n        </Route>\r\n\r\n        <Route path={`${path}/allGood`}>\r\n          <AllGood />\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Screening;\r\n"]},"metadata":{},"sourceType":"module"}